{"ast":null,"code":"var _jsxFileName = \"c:\\\\Academics\\\\Programming\\\\stdlib-showcase\\\\react-stdlib-showcase\\\\src\\\\components\\\\FunctionCard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./FunctionCard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FunctionCard = ({\n  title,\n  functions\n}) => {\n  _s();\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [inputs, setInputs] = useState({});\n  const [outputs, setOutputs] = useState({});\n  const handleInputChange = (functionName, value) => {\n    setInputs({\n      ...inputs,\n      [functionName]: value\n    });\n  };\n  const handleTryFunction = func => {\n    if (func.tryIt) {\n      const result = func.tryIt(inputs[func.name] || \"\");\n      setOutputs({\n        ...outputs,\n        [func.name]: JSON.stringify(result)\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"function-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"function-card-header\",\n      onClick: () => setIsExpanded(!isExpanded),\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"expand-icon\",\n        children: isExpanded ? \"−\" : \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), isExpanded && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"function-card-content\",\n      children: functions.map((func, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"function-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: func.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: func.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"code\", {\n          children: func.example\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"try-it-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: func.inputPlaceholder || \"Enter input array...\",\n            value: inputs[func.name] || \"\",\n            onChange: e => handleInputChange(func.name, e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleTryFunction(func),\n            children: \"Try it!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this), outputs[func.name] && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"output\",\n            children: [\"Result: \", outputs[func.name]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(FunctionCard, \"RST/posh5nK62bup3eGa5cTU0zY=\");\n_c = FunctionCard;\nexport default FunctionCard;\nvar _c;\n$RefreshReg$(_c, \"FunctionCard\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","FunctionCard","title","functions","_s","isExpanded","setIsExpanded","inputs","setInputs","outputs","setOutputs","handleInputChange","functionName","value","handleTryFunction","func","tryIt","result","name","JSON","stringify","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","index","description","example","type","placeholder","inputPlaceholder","onChange","e","target","_c","$RefreshReg$"],"sources":["c:/Academics/Programming/stdlib-showcase/react-stdlib-showcase/src/components/FunctionCard.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./FunctionCard.css\";\r\n\r\ninterface Function {\r\n  name: string;\r\n  description: string;\r\n  example: string;\r\n  inputPlaceholder?: string;\r\n  tryIt?: (\r\n    input: string\r\n  ) => string | number | any[] | { [key: string]: number } | any;\r\n}\r\n\r\ninterface FunctionCardProps {\r\n  title: string;\r\n  functions: Function[];\r\n}\r\n\r\nconst FunctionCard: React.FC<FunctionCardProps> = ({ title, functions }) => {\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n  const [inputs, setInputs] = useState<{ [key: string]: string }>({});\r\n  const [outputs, setOutputs] = useState<{ [key: string]: string }>({});\r\n\r\n  const handleInputChange = (functionName: string, value: string) => {\r\n    setInputs({ ...inputs, [functionName]: value });\r\n  };\r\n\r\n  const handleTryFunction = (func: Function) => {\r\n    if (func.tryIt) {\r\n      const result = func.tryIt(inputs[func.name] || \"\");\r\n      setOutputs({ ...outputs, [func.name]: JSON.stringify(result) });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"function-card\">\r\n      <div\r\n        className=\"function-card-header\"\r\n        onClick={() => setIsExpanded(!isExpanded)}\r\n      >\r\n        <h3>{title}</h3>\r\n        <span className=\"expand-icon\">{isExpanded ? \"−\" : \"+\"}</span>\r\n      </div>\r\n      {isExpanded && (\r\n        <div className=\"function-card-content\">\r\n          {functions.map((func, index) => (\r\n            <div key={index} className=\"function-item\">\r\n              <h4>{func.name}</h4>\r\n              <p>{func.description}</p>\r\n              <code>{func.example}</code>\r\n              <div className=\"try-it-section\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder={func.inputPlaceholder || \"Enter input array...\"}\r\n                  value={inputs[func.name] || \"\"}\r\n                  onChange={(e) => handleInputChange(func.name, e.target.value)}\r\n                />\r\n                <button onClick={() => handleTryFunction(func)}>Try it!</button>\r\n                {outputs[func.name] && (\r\n                  <div className=\"output\">Result: {outputs[func.name]}</div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FunctionCard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}