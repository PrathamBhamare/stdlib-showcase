{"ast":null,"code":"var _jsxFileName = \"c:\\\\Academics\\\\Programming\\\\stdlib-showcase\\\\react-stdlib-showcase\\\\src\\\\components\\\\cards\\\\ArrayCard.tsx\";\nimport React from 'react';\nimport FunctionCard from '../FunctionCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ArrayCard = () => {\n  const arrayFunctions = [{\n    name: 'map()',\n    description: 'Creates a new array with the results of calling a function for every array element.',\n    example: `const numbers = [1, 2, 3, 4];\nconst doubled = numbers.map(num => num * 2);\n// Result: [2, 4, 6, 8]`\n  }, {\n    name: 'filter()',\n    description: 'Creates a new array with elements that pass a test.',\n    example: `const numbers = [1, 2, 3, 4, 5, 6];\nconst evenNumbers = numbers.filter(num => num % 2 === 0);\n// Result: [2, 4, 6]`\n  }, {\n    name: 'reduce()',\n    description: 'Reduces an array to a single value (from left-to-right).',\n    example: `const numbers = [1, 2, 3, 4];\nconst sum = numbers.reduce((acc, curr) => acc + curr, 0);\n// Result: 10`\n  }];\n  return /*#__PURE__*/_jsxDEV(FunctionCard, {\n    title: \"Array Functions\",\n    functions: arrayFunctions\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 10\n  }, this);\n};\n_c = ArrayCard;\nexport default ArrayCard;\nvar _c;\n$RefreshReg$(_c, \"ArrayCard\");","map":{"version":3,"names":["React","FunctionCard","jsxDEV","_jsxDEV","ArrayCard","arrayFunctions","name","description","example","title","functions","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["c:/Academics/Programming/stdlib-showcase/react-stdlib-showcase/src/components/cards/ArrayCard.tsx"],"sourcesContent":["import React from 'react';\nimport FunctionCard from '../FunctionCard';\n\nconst ArrayCard: React.FC = () => {\n  const arrayFunctions = [\n    {\n      name: 'map()',\n      description: 'Creates a new array with the results of calling a function for every array element.',\n      example: `const numbers = [1, 2, 3, 4];\nconst doubled = numbers.map(num => num * 2);\n// Result: [2, 4, 6, 8]`\n    },\n    {\n      name: 'filter()',\n      description: 'Creates a new array with elements that pass a test.',\n      example: `const numbers = [1, 2, 3, 4, 5, 6];\nconst evenNumbers = numbers.filter(num => num % 2 === 0);\n// Result: [2, 4, 6]`\n    },\n    {\n      name: 'reduce()',\n      description: 'Reduces an array to a single value (from left-to-right).',\n      example: `const numbers = [1, 2, 3, 4];\nconst sum = numbers.reduce((acc, curr) => acc + curr, 0);\n// Result: 10`\n    }\n  ];\n\n  return <FunctionCard title=\"Array Functions\" functions={arrayFunctions} />;\n};\n\nexport default ArrayCard;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,SAAmB,GAAGA,CAAA,KAAM;EAChC,MAAMC,cAAc,GAAG,CACrB;IACEC,IAAI,EAAE,OAAO;IACbC,WAAW,EAAE,qFAAqF;IAClGC,OAAO,EAAE;AACf;AACA;EACI,CAAC,EACD;IACEF,IAAI,EAAE,UAAU;IAChBC,WAAW,EAAE,qDAAqD;IAClEC,OAAO,EAAE;AACf;AACA;EACI,CAAC,EACD;IACEF,IAAI,EAAE,UAAU;IAChBC,WAAW,EAAE,0DAA0D;IACvEC,OAAO,EAAE;AACf;AACA;EACI,CAAC,CACF;EAED,oBAAOL,OAAA,CAACF,YAAY;IAACQ,KAAK,EAAC,iBAAiB;IAACC,SAAS,EAAEL;EAAe;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC5E,CAAC;AAACC,EAAA,GA1BIX,SAAmB;AA4BzB,eAAeA,SAAS;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}