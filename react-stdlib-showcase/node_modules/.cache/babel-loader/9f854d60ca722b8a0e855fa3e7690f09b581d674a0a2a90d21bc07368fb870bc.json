{"ast":null,"code":"var _jsxFileName = \"c:\\\\Academics\\\\Programming\\\\stdlib-showcase\\\\react-stdlib-showcase\\\\src\\\\components\\\\cards\\\\ObjectCard.tsx\";\nimport React from \"react\";\nimport FunctionCard from \"../FunctionCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ObjectCard = () => {\n  const objectFunctions = [{\n    name: \"Object.keys()\",\n    description: \"Returns an array of object's own enumerable property names.\",\n    example: `const obj = { a: 1, b: 2, c: 3 };\nconst keys = Object.keys(obj);\n// Result: [\"a\", \"b\", \"c\"]`,\n    inputPlaceholder: 'Enter key-value pairs (e.g., {\"a\":1,\"b\":2})',\n    tryIt: input => {\n      try {\n        const obj = JSON.parse(input);\n        return Object.keys(obj);\n      } catch (e) {\n        return \"Please enter valid JSON object\";\n      }\n    }\n  }, {\n    name: \"Object.values()\",\n    description: \"Returns an array of object's own enumerable property values.\",\n    example: `const obj = { a: 1, b: 2, c: 3 };\nconst values = Object.values(obj);\n// Result: [1, 2, 3]`,\n    inputPlaceholder: 'Enter key-value pairs (e.g., {\"a\":1,\"b\":2})',\n    tryIt: input => {\n      try {\n        const obj = JSON.parse(input);\n        return Object.values(obj);\n      } catch (e) {\n        return \"Please enter valid JSON object\";\n      }\n    }\n  }, {\n    name: \"Object.entries()\",\n    description: \"Returns an array of object's own [key, value] pairs.\",\n    example: `const obj = { a: 1, b: 2 };\nconst entries = Object.entries(obj);\n// Result: [[\"a\", 1], [\"b\", 2]]`,\n    inputPlaceholder: 'Enter key-value pairs (e.g., {\"a\":1,\"b\":2})',\n    tryIt: input => {\n      try {\n        const obj = JSON.parse(input);\n        return Object.entries(obj);\n      } catch (e) {\n        return \"Please enter valid JSON object\";\n      }\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(FunctionCard, {\n    title: \"Object Functions\",\n    functions: objectFunctions\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 10\n  }, this);\n};\n_c = ObjectCard;\nexport default ObjectCard;\nvar _c;\n$RefreshReg$(_c, \"ObjectCard\");","map":{"version":3,"names":["React","FunctionCard","jsxDEV","_jsxDEV","ObjectCard","objectFunctions","name","description","example","inputPlaceholder","tryIt","input","obj","JSON","parse","Object","keys","e","values","entries","title","functions","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["c:/Academics/Programming/stdlib-showcase/react-stdlib-showcase/src/components/cards/ObjectCard.tsx"],"sourcesContent":["import React from \"react\";\nimport FunctionCard from \"../FunctionCard\";\n\nconst ObjectCard: React.FC = () => {\n  const objectFunctions = [\n    {\n      name: \"Object.keys()\",\n      description:\n        \"Returns an array of object's own enumerable property names.\",\n      example: `const obj = { a: 1, b: 2, c: 3 };\nconst keys = Object.keys(obj);\n// Result: [\"a\", \"b\", \"c\"]`,\n      inputPlaceholder: 'Enter key-value pairs (e.g., {\"a\":1,\"b\":2})',\n      tryIt: (input: string) => {\n        try {\n          const obj = JSON.parse(input);\n          return Object.keys(obj);\n        } catch (e) {\n          return \"Please enter valid JSON object\";\n        }\n      },\n    },\n    {\n      name: \"Object.values()\",\n      description:\n        \"Returns an array of object's own enumerable property values.\",\n      example: `const obj = { a: 1, b: 2, c: 3 };\nconst values = Object.values(obj);\n// Result: [1, 2, 3]`,\n      inputPlaceholder: 'Enter key-value pairs (e.g., {\"a\":1,\"b\":2})',\n      tryIt: (input: string) => {\n        try {\n          const obj = JSON.parse(input);\n          return Object.values(obj);\n        } catch (e) {\n          return \"Please enter valid JSON object\";\n        }\n      },\n    },\n    {\n      name: \"Object.entries()\",\n      description: \"Returns an array of object's own [key, value] pairs.\",\n      example: `const obj = { a: 1, b: 2 };\nconst entries = Object.entries(obj);\n// Result: [[\"a\", 1], [\"b\", 2]]`,\n      inputPlaceholder: 'Enter key-value pairs (e.g., {\"a\":1,\"b\":2})',\n      tryIt: (input: string) => {\n        try {\n          const obj = JSON.parse(input);\n          return Object.entries(obj);\n        } catch (e) {\n          return \"Please enter valid JSON object\";\n        }\n      },\n    },\n  ];\n\n  return <FunctionCard title=\"Object Functions\" functions={objectFunctions} />;\n};\n\nexport default ObjectCard;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,UAAoB,GAAGA,CAAA,KAAM;EACjC,MAAMC,eAAe,GAAG,CACtB;IACEC,IAAI,EAAE,eAAe;IACrBC,WAAW,EACT,6DAA6D;IAC/DC,OAAO,EAAE;AACf;AACA,2BAA2B;IACrBC,gBAAgB,EAAE,6CAA6C;IAC/DC,KAAK,EAAGC,KAAa,IAAK;MACxB,IAAI;QACF,MAAMC,GAAG,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAAC;QAC7B,OAAOI,MAAM,CAACC,IAAI,CAACJ,GAAG,CAAC;MACzB,CAAC,CAAC,OAAOK,CAAC,EAAE;QACV,OAAO,gCAAgC;MACzC;IACF;EACF,CAAC,EACD;IACEX,IAAI,EAAE,iBAAiB;IACvBC,WAAW,EACT,8DAA8D;IAChEC,OAAO,EAAE;AACf;AACA,qBAAqB;IACfC,gBAAgB,EAAE,6CAA6C;IAC/DC,KAAK,EAAGC,KAAa,IAAK;MACxB,IAAI;QACF,MAAMC,GAAG,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAAC;QAC7B,OAAOI,MAAM,CAACG,MAAM,CAACN,GAAG,CAAC;MAC3B,CAAC,CAAC,OAAOK,CAAC,EAAE;QACV,OAAO,gCAAgC;MACzC;IACF;EACF,CAAC,EACD;IACEX,IAAI,EAAE,kBAAkB;IACxBC,WAAW,EAAE,sDAAsD;IACnEC,OAAO,EAAE;AACf;AACA,gCAAgC;IAC1BC,gBAAgB,EAAE,6CAA6C;IAC/DC,KAAK,EAAGC,KAAa,IAAK;MACxB,IAAI;QACF,MAAMC,GAAG,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAAC;QAC7B,OAAOI,MAAM,CAACI,OAAO,CAACP,GAAG,CAAC;MAC5B,CAAC,CAAC,OAAOK,CAAC,EAAE;QACV,OAAO,gCAAgC;MACzC;IACF;EACF,CAAC,CACF;EAED,oBAAOd,OAAA,CAACF,YAAY;IAACmB,KAAK,EAAC,kBAAkB;IAACC,SAAS,EAAEhB;EAAgB;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC9E,CAAC;AAACC,EAAA,GAvDItB,UAAoB;AAyD1B,eAAeA,UAAU;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}