{"ast":null,"code":"var _jsxFileName = \"c:\\\\Academics\\\\Programming\\\\stdlib-showcase\\\\react-stdlib-showcase\\\\src\\\\components\\\\cards\\\\StringCard.tsx\";\nimport React from \"react\";\nimport FunctionCard from \"../FunctionCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StringCard = () => {\n  const stringFunctions = [{\n    name: \"toUpperCase()\",\n    description: \"Converts a string to uppercase.\",\n    example: `const str = \"hello world\";\nconst upper = str.toUpperCase();\n// Result: \"HELLO WORLD\"`\n  }, {\n    name: \"toLowerCase()\",\n    description: \"Converts a string to lowercase.\",\n    example: `const str = \"HELLO WORLD\";\nconst lower = str.toLowerCase();\n// Result: \"hello world\"`\n  }, {\n    name: \"substring()\",\n    description: \"Extracts characters between two indices from a string.\",\n    example: `const str = \"Hello World\";\nconst sub = str.substring(0, 5);\n// Result: \"Hello\"`\n  }, {\n    name: \"split()\",\n    description: \"Splits a string into an array of substrings.\",\n    example: `const str = \"apple,banana,orange\";\nconst fruits = str.split(',');\n// Result: [\"apple\", \"banana\", \"orange\"]`\n  }, {\n    name: \"trim()\",\n    description: \"Removes whitespace from both ends of a string.\",\n    example: `const str = \"   Hello World   \";\nconst trimmed = str.trim();\n// Result: \"Hello World\"`\n  }];\n  return /*#__PURE__*/_jsxDEV(FunctionCard, {\n    title: \"String Functions\",\n    functions: stringFunctions\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 10\n  }, this);\n};\n_c = StringCard;\nexport default StringCard;\nvar _c;\n$RefreshReg$(_c, \"StringCard\");","map":{"version":3,"names":["React","FunctionCard","jsxDEV","_jsxDEV","StringCard","stringFunctions","name","description","example","title","functions","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["c:/Academics/Programming/stdlib-showcase/react-stdlib-showcase/src/components/cards/StringCard.tsx"],"sourcesContent":["import React from \"react\";\nimport FunctionCard from \"../FunctionCard\";\n\nconst StringCard: React.FC = () => {\n  const stringFunctions = [\n    {\n      name: \"toUpperCase()\",\n      description: \"Converts a string to uppercase.\",\n      example: `const str = \"hello world\";\nconst upper = str.toUpperCase();\n// Result: \"HELLO WORLD\"`,\n    },\n    {\n      name: \"toLowerCase()\",\n      description: \"Converts a string to lowercase.\",\n      example: `const str = \"HELLO WORLD\";\nconst lower = str.toLowerCase();\n// Result: \"hello world\"`,\n    },\n    {\n      name: \"substring()\",\n      description: \"Extracts characters between two indices from a string.\",\n      example: `const str = \"Hello World\";\nconst sub = str.substring(0, 5);\n// Result: \"Hello\"`,\n    },\n    {\n      name: \"split()\",\n      description: \"Splits a string into an array of substrings.\",\n      example: `const str = \"apple,banana,orange\";\nconst fruits = str.split(',');\n// Result: [\"apple\", \"banana\", \"orange\"]`,\n    },\n    {\n      name: \"trim()\",\n      description: \"Removes whitespace from both ends of a string.\",\n      example: `const str = \"   Hello World   \";\nconst trimmed = str.trim();\n// Result: \"Hello World\"`,\n    },\n  ];\n\n  return <FunctionCard title=\"String Functions\" functions={stringFunctions} />;\n};\n\nexport default StringCard;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,UAAoB,GAAGA,CAAA,KAAM;EACjC,MAAMC,eAAe,GAAG,CACtB;IACEC,IAAI,EAAE,eAAe;IACrBC,WAAW,EAAE,iCAAiC;IAC9CC,OAAO,EAAE;AACf;AACA;EACI,CAAC,EACD;IACEF,IAAI,EAAE,eAAe;IACrBC,WAAW,EAAE,iCAAiC;IAC9CC,OAAO,EAAE;AACf;AACA;EACI,CAAC,EACD;IACEF,IAAI,EAAE,aAAa;IACnBC,WAAW,EAAE,wDAAwD;IACrEC,OAAO,EAAE;AACf;AACA;EACI,CAAC,EACD;IACEF,IAAI,EAAE,SAAS;IACfC,WAAW,EAAE,8CAA8C;IAC3DC,OAAO,EAAE;AACf;AACA;EACI,CAAC,EACD;IACEF,IAAI,EAAE,QAAQ;IACdC,WAAW,EAAE,gDAAgD;IAC7DC,OAAO,EAAE;AACf;AACA;EACI,CAAC,CACF;EAED,oBAAOL,OAAA,CAACF,YAAY;IAACQ,KAAK,EAAC,kBAAkB;IAACC,SAAS,EAAEL;EAAgB;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC9E,CAAC;AAACC,EAAA,GAxCIX,UAAoB;AA0C1B,eAAeA,UAAU;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}