{"ast":null,"code":"var _jsxFileName = \"c:\\\\Academics\\\\Programming\\\\stdlib-showcase\\\\react-stdlib-showcase\\\\src\\\\components\\\\cards\\\\ObjectCard.tsx\";\nimport React from \"react\";\nimport FunctionCard from \"../FunctionCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ObjectCard = () => {\n  const objectFunctions = [{\n    name: \"Object.keys()\",\n    description: \"Returns an array of a given object's own enumerable property names.\",\n    example: `const obj = { a: 1, b: 2, c: 3 };\nconst keys = Object.keys(obj);\n// Result: [\"a\", \"b\", \"c\"]`\n  }, {\n    name: \"Object.values()\",\n    description: \"Returns an array of a given object's own enumerable property values.\",\n    example: `const obj = { a: 1, b: 2, c: 3 };\nconst values = Object.values(obj);\n// Result: [1, 2, 3]`\n  }, {\n    name: \"Object.entries()\",\n    description: \"Returns an array of a given object's own enumerable key-value pairs.\",\n    example: `const obj = { a: 1, b: 2 };\nconst entries = Object.entries(obj);\n// Result: [[\"a\", 1], [\"b\", 2]]`\n  }, {\n    name: \"Object.assign()\",\n    description: \"Copies all enumerable properties from source objects to a target object.\",\n    example: `const target = { a: 1 };\nconst source = { b: 2 };\nconst result = Object.assign(target, source);\n// Result: { a: 1, b: 2 }`\n  }];\n  return /*#__PURE__*/_jsxDEV(FunctionCard, {\n    title: \"Object Functions\",\n    functions: objectFunctions\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 10\n  }, this);\n};\n_c = ObjectCard;\nexport default ObjectCard;\nvar _c;\n$RefreshReg$(_c, \"ObjectCard\");","map":{"version":3,"names":["React","FunctionCard","jsxDEV","_jsxDEV","ObjectCard","objectFunctions","name","description","example","title","functions","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["c:/Academics/Programming/stdlib-showcase/react-stdlib-showcase/src/components/cards/ObjectCard.tsx"],"sourcesContent":["import React from \"react\";\nimport FunctionCard from \"../FunctionCard\";\n\nconst ObjectCard: React.FC = () => {\n  const objectFunctions = [\n    {\n      name: \"Object.keys()\",\n      description: \"Returns an array of a given object's own enumerable property names.\",\n      example: `const obj = { a: 1, b: 2, c: 3 };\nconst keys = Object.keys(obj);\n// Result: [\"a\", \"b\", \"c\"]`,\n    },\n    {\n      name: \"Object.values()\",\n      description: \"Returns an array of a given object's own enumerable property values.\",\n      example: `const obj = { a: 1, b: 2, c: 3 };\nconst values = Object.values(obj);\n// Result: [1, 2, 3]`,\n    },\n    {\n      name: \"Object.entries()\",\n      description: \"Returns an array of a given object's own enumerable key-value pairs.\",\n      example: `const obj = { a: 1, b: 2 };\nconst entries = Object.entries(obj);\n// Result: [[\"a\", 1], [\"b\", 2]]`,\n    },\n    {\n      name: \"Object.assign()\",\n      description: \"Copies all enumerable properties from source objects to a target object.\",\n      example: `const target = { a: 1 };\nconst source = { b: 2 };\nconst result = Object.assign(target, source);\n// Result: { a: 1, b: 2 }`,\n    },\n  ];\n\n  return <FunctionCard title=\"Object Functions\" functions={objectFunctions} />;\n};\n\nexport default ObjectCard;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,UAAoB,GAAGA,CAAA,KAAM;EACjC,MAAMC,eAAe,GAAG,CACtB;IACEC,IAAI,EAAE,eAAe;IACrBC,WAAW,EAAE,qEAAqE;IAClFC,OAAO,EAAE;AACf;AACA;EACI,CAAC,EACD;IACEF,IAAI,EAAE,iBAAiB;IACvBC,WAAW,EAAE,sEAAsE;IACnFC,OAAO,EAAE;AACf;AACA;EACI,CAAC,EACD;IACEF,IAAI,EAAE,kBAAkB;IACxBC,WAAW,EAAE,sEAAsE;IACnFC,OAAO,EAAE;AACf;AACA;EACI,CAAC,EACD;IACEF,IAAI,EAAE,iBAAiB;IACvBC,WAAW,EAAE,0EAA0E;IACvFC,OAAO,EAAE;AACf;AACA;AACA;EACI,CAAC,CACF;EAED,oBAAOL,OAAA,CAACF,YAAY;IAACQ,KAAK,EAAC,kBAAkB;IAACC,SAAS,EAAEL;EAAgB;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC9E,CAAC;AAACC,EAAA,GAlCIX,UAAoB;AAoC1B,eAAeA,UAAU;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}