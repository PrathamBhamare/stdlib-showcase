{"ast":null,"code":"var _jsxFileName = \"c:\\\\Academics\\\\Programming\\\\stdlib-showcase\\\\react-stdlib-showcase\\\\src\\\\components\\\\cards\\\\StringCard.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StringCard = () => {\n  const stringFunctions = [{\n    name: 'toUpperCase',\n    description: 'Converts a string to uppercase.'\n  }, {\n    name: 'toLowerCase',\n    description: 'Converts a string to lowercase.'\n  }, {\n    name: 'substring',\n    description: 'Extracts a substring from a string.'\n  }, {\n    name: 'split',\n    description: 'Splits a string into an array of substrings.'\n  }, {\n    name: 'trim',\n    description: 'Removes whitespace from both ends of a string.'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"String Functions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: stringFunctions.map((func, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [func.name, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 25\n        }, this), \" \", func.description]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n_c = StringCard;\nexport default StringCard;\nvar _c;\n$RefreshReg$(_c, \"StringCard\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","StringCard","stringFunctions","name","description","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","func","index","_c","$RefreshReg$"],"sources":["c:/Academics/Programming/stdlib-showcase/react-stdlib-showcase/src/components/cards/StringCard.tsx"],"sourcesContent":["import React from 'react';\n\nconst StringCard: React.FC = () => {\n    const stringFunctions = [\n        { name: 'toUpperCase', description: 'Converts a string to uppercase.' },\n        { name: 'toLowerCase', description: 'Converts a string to lowercase.' },\n        { name: 'substring', description: 'Extracts a substring from a string.' },\n        { name: 'split', description: 'Splits a string into an array of substrings.' },\n        { name: 'trim', description: 'Removes whitespace from both ends of a string.' },\n    ];\n\n    return (\n        <div className=\"card\">\n            <h2>String Functions</h2>\n            <ul>\n                {stringFunctions.map((func, index) => (\n                    <li key={index}>\n                        <strong>{func.name}:</strong> {func.description}\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default StringCard;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAoB,GAAGA,CAAA,KAAM;EAC/B,MAAMC,eAAe,GAAG,CACpB;IAAEC,IAAI,EAAE,aAAa;IAAEC,WAAW,EAAE;EAAkC,CAAC,EACvE;IAAED,IAAI,EAAE,aAAa;IAAEC,WAAW,EAAE;EAAkC,CAAC,EACvE;IAAED,IAAI,EAAE,WAAW;IAAEC,WAAW,EAAE;EAAsC,CAAC,EACzE;IAAED,IAAI,EAAE,OAAO;IAAEC,WAAW,EAAE;EAA+C,CAAC,EAC9E;IAAED,IAAI,EAAE,MAAM;IAAEC,WAAW,EAAE;EAAiD,CAAC,CAClF;EAED,oBACIJ,OAAA;IAAKK,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACjBN,OAAA;MAAAM,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBV,OAAA;MAAAM,QAAA,EACKJ,eAAe,CAACS,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC7Bb,OAAA;QAAAM,QAAA,gBACIN,OAAA;UAAAM,QAAA,GAASM,IAAI,CAACT,IAAI,EAAC,GAAC;QAAA;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACE,IAAI,CAACR,WAAW;MAAA,GAD1CS,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAACI,EAAA,GArBIb,UAAoB;AAuB1B,eAAeA,UAAU;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}