{"ast":null,"code":"var _jsxFileName = \"c:\\\\Academics\\\\Programming\\\\stdlib-showcase\\\\react-stdlib-showcase\\\\src\\\\components\\\\cards\\\\DateCard.tsx\";\nimport React from \"react\";\nimport FunctionCard from \"../FunctionCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DateCard = () => {\n  const dateFunctions = [{\n    name: \"new Date()\",\n    description: \"Creates a new date object with the current date and time.\",\n    example: `const now = new Date();\nconsole.log(now);\n// Result: Current date and time`\n  }, {\n    name: \"getFullYear()\",\n    description: \"Returns the year of a date as a four digit number.\",\n    example: `const date = new Date();\nconst year = date.getFullYear();\n// Result: 2025`\n  }, {\n    name: \"toLocaleDateString()\",\n    description: \"Returns a date as a string using locale conventions.\",\n    example: `const date = new Date();\nconst local = date.toLocaleDateString();\n// Result: \"4/8/2025\"`\n  }, {\n    name: \"getTime()\",\n    description: \"Returns the number of milliseconds since January 1, 1970.\",\n    example: `const date = new Date();\nconst timestamp = date.getTime();\n// Result: milliseconds since epoch`\n  }];\n  return /*#__PURE__*/_jsxDEV(FunctionCard, {\n    title: \"Date Functions\",\n    functions: dateFunctions\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 10\n  }, this);\n};\n_c = DateCard;\nexport default DateCard;\nvar _c;\n$RefreshReg$(_c, \"DateCard\");","map":{"version":3,"names":["React","FunctionCard","jsxDEV","_jsxDEV","DateCard","dateFunctions","name","description","example","title","functions","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["c:/Academics/Programming/stdlib-showcase/react-stdlib-showcase/src/components/cards/DateCard.tsx"],"sourcesContent":["import React from \"react\";\nimport FunctionCard from \"../FunctionCard\";\n\nconst DateCard: React.FC = () => {\n  const dateFunctions = [\n    {\n      name: \"new Date()\",\n      description: \"Creates a new date object with the current date and time.\",\n      example: `const now = new Date();\nconsole.log(now);\n// Result: Current date and time`,\n    },\n    {\n      name: \"getFullYear()\",\n      description: \"Returns the year of a date as a four digit number.\",\n      example: `const date = new Date();\nconst year = date.getFullYear();\n// Result: 2025`,\n    },\n    {\n      name: \"toLocaleDateString()\",\n      description: \"Returns a date as a string using locale conventions.\",\n      example: `const date = new Date();\nconst local = date.toLocaleDateString();\n// Result: \"4/8/2025\"`,\n    },\n    {\n      name: \"getTime()\",\n      description: \"Returns the number of milliseconds since January 1, 1970.\",\n      example: `const date = new Date();\nconst timestamp = date.getTime();\n// Result: milliseconds since epoch`,\n    },\n  ];\n\n  return <FunctionCard title=\"Date Functions\" functions={dateFunctions} />;\n};\n\nexport default DateCard;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,QAAkB,GAAGA,CAAA,KAAM;EAC/B,MAAMC,aAAa,GAAG,CACpB;IACEC,IAAI,EAAE,YAAY;IAClBC,WAAW,EAAE,2DAA2D;IACxEC,OAAO,EAAE;AACf;AACA;EACI,CAAC,EACD;IACEF,IAAI,EAAE,eAAe;IACrBC,WAAW,EAAE,oDAAoD;IACjEC,OAAO,EAAE;AACf;AACA;EACI,CAAC,EACD;IACEF,IAAI,EAAE,sBAAsB;IAC5BC,WAAW,EAAE,sDAAsD;IACnEC,OAAO,EAAE;AACf;AACA;EACI,CAAC,EACD;IACEF,IAAI,EAAE,WAAW;IACjBC,WAAW,EAAE,2DAA2D;IACxEC,OAAO,EAAE;AACf;AACA;EACI,CAAC,CACF;EAED,oBAAOL,OAAA,CAACF,YAAY;IAACQ,KAAK,EAAC,gBAAgB;IAACC,SAAS,EAAEL;EAAc;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC1E,CAAC;AAACC,EAAA,GAjCIX,QAAkB;AAmCxB,eAAeA,QAAQ;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}