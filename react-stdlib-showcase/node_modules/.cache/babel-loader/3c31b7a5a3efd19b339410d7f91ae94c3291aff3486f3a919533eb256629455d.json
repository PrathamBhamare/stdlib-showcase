{"ast":null,"code":"var _jsxFileName = \"c:\\\\Academics\\\\Programming\\\\stdlib-showcase\\\\react-stdlib-showcase\\\\src\\\\components\\\\cards\\\\MathCard.tsx\";\nimport React from \"react\";\nimport FunctionCard from \"../FunctionCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MathCard = () => {\n  const mathFunctions = [{\n    name: \"Math.abs()\",\n    description: \"Returns the absolute value of a number.\",\n    example: `const num = -5;\nconst absolute = Math.abs(num);\n// Result: 5`,\n    inputPlaceholder: \"Enter a number (e.g., -5)\",\n    tryIt: input => {\n      try {\n        return Math.abs(Number(input));\n      } catch (e) {\n        return \"Please enter a valid number\";\n      }\n    }\n  }, {\n    name: \"Math.round()\",\n    description: \"Rounds a number to the nearest integer.\",\n    example: `const num = 5.6;\nconst rounded = Math.round(num);\n// Result: 6`,\n    inputPlaceholder: \"Enter a decimal number (e.g., 5.6)\",\n    tryIt: input => {\n      try {\n        return Math.round(Number(input));\n      } catch (e) {\n        return \"Please enter a valid decimal number\";\n      }\n    }\n  }, {\n    name: \"Math.pow()\",\n    description: \"Returns the base to the exponent power.\",\n    example: `const base = 2;\nconst exponent = 3;\nconst result = Math.pow(base, exponent);\n// Result: 8`,\n    inputPlaceholder: \"Enter base,exponent (e.g., 2,3)\",\n    tryIt: input => {\n      try {\n        const [base, exponent] = input.split(\",\").map(Number);\n        return Math.pow(base, exponent);\n      } catch (e) {\n        return \"Please enter base and exponent separated by comma\";\n      }\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(FunctionCard, {\n    title: \"Math Functions\",\n    functions: mathFunctions\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 10\n  }, this);\n};\n_c = MathCard;\nexport default MathCard;\nvar _c;\n$RefreshReg$(_c, \"MathCard\");","map":{"version":3,"names":["React","FunctionCard","jsxDEV","_jsxDEV","MathCard","mathFunctions","name","description","example","inputPlaceholder","tryIt","input","Math","abs","Number","e","round","base","exponent","split","map","pow","title","functions","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["c:/Academics/Programming/stdlib-showcase/react-stdlib-showcase/src/components/cards/MathCard.tsx"],"sourcesContent":["import React from \"react\";\nimport FunctionCard from \"../FunctionCard\";\n\nconst MathCard: React.FC = () => {\n  const mathFunctions = [\n    {\n      name: \"Math.abs()\",\n      description: \"Returns the absolute value of a number.\",\n      example: `const num = -5;\nconst absolute = Math.abs(num);\n// Result: 5`,\n      inputPlaceholder: \"Enter a number (e.g., -5)\",\n      tryIt: (input: string) => {\n        try {\n          return Math.abs(Number(input));\n        } catch (e) {\n          return \"Please enter a valid number\";\n        }\n      },\n    },\n    {\n      name: \"Math.round()\",\n      description: \"Rounds a number to the nearest integer.\",\n      example: `const num = 5.6;\nconst rounded = Math.round(num);\n// Result: 6`,\n      inputPlaceholder: \"Enter a decimal number (e.g., 5.6)\",\n      tryIt: (input: string) => {\n        try {\n          return Math.round(Number(input));\n        } catch (e) {\n          return \"Please enter a valid decimal number\";\n        }\n      },\n    },\n    {\n      name: \"Math.pow()\",\n      description: \"Returns the base to the exponent power.\",\n      example: `const base = 2;\nconst exponent = 3;\nconst result = Math.pow(base, exponent);\n// Result: 8`,\n      inputPlaceholder: \"Enter base,exponent (e.g., 2,3)\",\n      tryIt: (input: string) => {\n        try {\n          const [base, exponent] = input.split(\",\").map(Number);\n          return Math.pow(base, exponent);\n        } catch (e) {\n          return \"Please enter base and exponent separated by comma\";\n        }\n      },\n    },\n  ];\n\n  return <FunctionCard title=\"Math Functions\" functions={mathFunctions} />;\n};\n\nexport default MathCard;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,QAAkB,GAAGA,CAAA,KAAM;EAC/B,MAAMC,aAAa,GAAG,CACpB;IACEC,IAAI,EAAE,YAAY;IAClBC,WAAW,EAAE,yCAAyC;IACtDC,OAAO,EAAE;AACf;AACA,aAAa;IACPC,gBAAgB,EAAE,2BAA2B;IAC7CC,KAAK,EAAGC,KAAa,IAAK;MACxB,IAAI;QACF,OAAOC,IAAI,CAACC,GAAG,CAACC,MAAM,CAACH,KAAK,CAAC,CAAC;MAChC,CAAC,CAAC,OAAOI,CAAC,EAAE;QACV,OAAO,6BAA6B;MACtC;IACF;EACF,CAAC,EACD;IACET,IAAI,EAAE,cAAc;IACpBC,WAAW,EAAE,yCAAyC;IACtDC,OAAO,EAAE;AACf;AACA,aAAa;IACPC,gBAAgB,EAAE,oCAAoC;IACtDC,KAAK,EAAGC,KAAa,IAAK;MACxB,IAAI;QACF,OAAOC,IAAI,CAACI,KAAK,CAACF,MAAM,CAACH,KAAK,CAAC,CAAC;MAClC,CAAC,CAAC,OAAOI,CAAC,EAAE;QACV,OAAO,qCAAqC;MAC9C;IACF;EACF,CAAC,EACD;IACET,IAAI,EAAE,YAAY;IAClBC,WAAW,EAAE,yCAAyC;IACtDC,OAAO,EAAE;AACf;AACA;AACA,aAAa;IACPC,gBAAgB,EAAE,iCAAiC;IACnDC,KAAK,EAAGC,KAAa,IAAK;MACxB,IAAI;QACF,MAAM,CAACM,IAAI,EAAEC,QAAQ,CAAC,GAAGP,KAAK,CAACQ,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACN,MAAM,CAAC;QACrD,OAAOF,IAAI,CAACS,GAAG,CAACJ,IAAI,EAAEC,QAAQ,CAAC;MACjC,CAAC,CAAC,OAAOH,CAAC,EAAE;QACV,OAAO,mDAAmD;MAC5D;IACF;EACF,CAAC,CACF;EAED,oBAAOZ,OAAA,CAACF,YAAY;IAACqB,KAAK,EAAC,gBAAgB;IAACC,SAAS,EAAElB;EAAc;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC1E,CAAC;AAACC,EAAA,GApDIxB,QAAkB;AAsDxB,eAAeA,QAAQ;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}